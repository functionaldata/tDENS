// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cumtrapzRcpp
Rcpp::NumericVector cumtrapzRcpp(const Rcpp::NumericVector X, const Rcpp::NumericVector Y);
RcppExport SEXP _fdadensity_cumtrapzRcpp(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(cumtrapzRcpp(X, Y));
    return rcpp_result_gen;
END_RCPP
}
// trapzRcpp
double trapzRcpp(const Rcpp::NumericVector X, const Rcpp::NumericVector Y);
RcppExport SEXP _fdadensity_trapzRcpp(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(trapzRcpp(X, Y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fdadensity_cumtrapzRcpp", (DL_FUNC) &_fdadensity_cumtrapzRcpp, 2},
    {"_fdadensity_trapzRcpp", (DL_FUNC) &_fdadensity_trapzRcpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_fdadensity(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
